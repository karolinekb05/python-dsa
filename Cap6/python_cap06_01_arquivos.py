# -*- coding: utf-8 -*-
"""Python-Cap06-01-Arquivos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/karolinekb05/7ae4af659ab71534b6247ec883c0d04b/python-cap06-01-arquivos.ipynb

## Manipulação de arquivos em Python

Python puro, sem precisar de pacotes adicionais

###Lendo arquivos

Mantém o arquivo original intacto

'r' = apenas lê o arquivo
"""

# Abrindo o arquivo para leitura
a1 = open('arquivos/arquivo1.txt', 'r') # r = read

type(a1)

# Lendo o arquivo

print(a1.read())

# Contar o número de caracteres
print(a1.tell())

# Lendo o arquivo
# Atenção, pois após ler o arquivo 1 vez, na 2ª vez o retorno será vazio, porque o cursor está posicionado no final do arquivo
print(a1.read())

# Por conta do cursor se posicionar no final do arquivo, é necessário reposicionar ele
# Retornar para o início do arquivo
print(a1.seek(0,0)) # posiciona o cursor no 0

# Lendo os primeiros 23 caracteres
print(a1.read(23))

# Como o cursor ficou posicionado no caractere 23, ele continuou do 23 até o final
print(a1.read())

"""### Gravando Arquivos

Sobrescreve o arquivo

'w' = sobrescreve todo o arquivo

'a' = acrescenta ao que já existe
"""

# Abrindo arquivo para gravação
# Se o Python não encontrar o arquivo, ele criará
# Se o arquivo existir, ele irá sobrescrever
a2 = open('arquivos/arquivo2.txt', 'w') # w = write

# Como abrimos o arquivo apenas para gravação, não pode usar comandos de leitura
# Só pode write, ou write+read
print(a2.read())

# Gravando arquivo
a2.write('Aprendendo a programar em Python')

# Fechando o arquivo
a2.close()

# Abrindo o arquivo para leitura
a2 = open('arquivos/arquivo2.txt', 'r')

print(a2.read())

# Abrindo arquivo no modo 'a' de append
# Nesse caso não sobrescreve, apenas acrescenta
a2 = open('arquivos/arquivo2.txt', 'a') # a = append

# Escrevendo no arquivo aberto
a2.write(' A metodologia de ensino é ótima')

# Fechando o arquivo
a2.close()

# Abrindo o arquivo para leitura
a2 = open('arquivos/arquivo2.txt', 'r')

print(a2.read())

# Retornando ao início do arquivo
a2.seek(0,0)

print(a2.read())

"""## Abrindo Dataset em Linha Única

Este arquivo abaixo foi obtido no site de dados abertos do governo da cidade de Chicago, nos EUA:

https://data.cityofchicago.org
"""

# Abrindo csv no modo read
arq = open('arquivos/salarios.csv', 'r')

# Lendo o arquivo com método read e gravando na variável 'data'
data = arq.read()

# Dividindo os dados por cada enter
# split é dividir
rows = data.split('\n')

# Formou uma lista de strings
print(rows)

"""## Dividindo um arquivo em colunas

Atenção com os separadores!
"""

arq = open('arquivos/salarios.csv', 'r')

data = arq.read()

rows = data.split('\n')

type(rows)

#lista vazia
full_data = []

# Cria uma lista de listas
# Para cada linha dentro da lista de linhas
for row in rows:
  # Ao encontrar uma ',', faça a divisão
  split_row = row.split(',')
  # Acrescente o que está na variável 'split_row' na lista 'full_data'
  full_data.append(split_row)

print(full_data)

"""## Contando as linhas de um arquivo"""

arq = open('arquivos/salarios.csv', 'r')

data = arq.read()

rows = data.split('\n')

full_data = []

for row in rows:
  split_row = row.split(',')
  full_data.append(split_row)

count = 0
for row in full_data:
  # incrementa
  count += 1 # equivalente à: count = count + 1

print(count)

"""## Contando o número de colunas de um arquivo"""

arq = open('arquivos/salarios.csv', 'r')
data = arq.read()
rows = data.split('\n')
full_data = []

for row in rows:
  split_row = row.split(',')
  full_data.append(split_row)
  # Obtem a primeira linha pelo índice 0 e salva na variável 'first_row'
  first_row = full_data[0]
count = 0

for column in first_row:
  count += 1

# Outro modo:
# for column in firts_data[0]:
# count += 1

print(count)

"""## Gravando arquivo pelo Jupyter Notebook

%%writefile é operador do jupyter notebook, não é do python

Sempre que tiver um %% no arquivo, é operador do jupyter
"""

# Commented out IPython magic to ensure Python compatibility.
# # caminho e nome onde salvar o arquivo
# # abaixo, todo o texto que vai estar no arquivo
# %%writefile arquivos/arquivo4.txt
# Este arquivo foi gerado pelo Jupyter Notebook
# É possível gerar quantas linhas quisermos e o Jupyter grava no arquivo final.

arq3 = open('arquivos/arquivo4.txt', 'r')

arq3.read()

# Retornando ao início do arquivo
arq3.seek(0)

# readlines permite a leitura linha por linha
arq3.readlines()

# Loop for para ler cada linha do arquivo
for line in open('arquivos/arquivo4.txt'):
  print(line)

"""## Importando um Dataset com Pandas

Opção mais simples e superior, parecida com Excel

Melhor alternativa para manipular arquivos com dados estruturados
"""

# Importando pacote
import pandas as pd

pd.__version__

# Importando arquivo
arq_pd = 'arquivos/salarios.csv'

# Método do pandas que lê arquivo csv
df = pd.read_csv(arq_pd)

# Exibe as 5 primeiras linhas e o cabeçalho
df.head()

# Filtrando a coluna 'Position Title' e contando quantos registros existem por cargo
df['Position Title'].value_counts()